ABSTRACT FACTORY


Use the Abstract Factory when your code needs to work with various families of related products,
but you don't want it to depenss on the concrete classes of those products -
they might be unknown beforehand or you simply want to allow for future extensibility.

HOW TO IMPLEMENT

1. Map out a matrix of distinct product types versus variants of these products.

2. Declare abstract product interfaces for all product types. Then make all concrete product classes implement these interfaces.
3. Declare the abstract factory interface with a set of creation methods for all abstract products.
4. Implementasetofconcretefactoryclasses,oneforeachproduct variant.
5. Create factory initialization code somewhere in the app. It should instantiate one of the concrete factory classes,
depending on the application configuration or the current environment.
Pass this factory object to all classes that construct products.
6. Scan through the code and find all direct calls to product constructors.
Replace them with calls to the appropriate creation method on the factory object.

Abstract Factory can be used with Bridge.
This pairing is useful when some abstractions defined by Bridge can only work with specific implementations.

Abstract Factories, Builders and Prototypes can all be implemented as Singletons.
